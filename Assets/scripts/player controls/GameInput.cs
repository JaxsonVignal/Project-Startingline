//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/scripts/player controls/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""030257f0-49c6-44dd-b8ea-9572ba787148"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""bd1b74ca-1fc8-4559-9e10-0b87abe1ee50"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""a35aecdd-2779-4af6-ba07-5a91b0551e01"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1562f747-a307-465c-b92a-c042ebc5de5b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""f80a4a25-b441-4f1a-b96e-6b4e1664b720"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleUI"",
                    ""type"": ""Button"",
                    ""id"": ""121e29c4-3415-419c-8e25-5e8e5c73fb0d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""694c4547-c048-41d5-9e64-890e7f57e976"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar1"",
                    ""type"": ""PassThrough"",
                    ""id"": ""41b58201-0382-41bc-9122-728e62fb9da2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar2"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f3cc5674-d230-4f8f-9956-2b21e1953665"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar3"",
                    ""type"": ""PassThrough"",
                    ""id"": ""be91ce3a-9bf5-4d47-813b-882e6a2f079f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar4"",
                    ""type"": ""PassThrough"",
                    ""id"": ""972ad7bf-765d-4589-acc8-6e482bfcc1bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar5"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5e363f03-2e0c-466b-aabc-bc3779a11092"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar6"",
                    ""type"": ""PassThrough"",
                    ""id"": ""75483446-9504-42ae-806f-695b3cd6cfd5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar7"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f8c0bda5-2da2-46e9-837f-87c30dd16b3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar8"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7bff6747-e545-4742-aaf6-a0c25ecd7207"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar9"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d7ff4129-a27c-4629-9447-036df33d8959"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar10"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1252158f-05c8-451b-a85d-151643792160"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""useItem"",
                    ""type"": ""Button"",
                    ""id"": ""584e689e-46aa-43cb-9631-1e19879a2be7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9e2e9673-5cd5-4aeb-8ffb-36c505ed79cb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""0ecc3a33-69cf-4ed7-81e1-09c46729155b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""f45cc2ea-e30a-4524-ae2e-ea85f7bea11e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch Fire"",
                    ""type"": ""Button"",
                    ""id"": ""04d72aad-f3fd-4e46-a08a-3de305924486"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7842ab74-d983-441e-94ff-4e551db695ad"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3dbbd17-d43e-4a07-b169-4b1972c93ccb"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""PlayerMovement"",
                    ""id"": ""4ad04f48-b242-4a15-940c-ce5e9fcc5839"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""183a90a1-1a75-421d-911c-a0135a131512"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""97afb299-9900-4a7c-8680-22a6370ccd1d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""785a67d6-2adb-4395-877e-d8d68259cbee"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b734ce67-9448-40a2-b6de-f69a3bf07019"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9f367f08-0a2b-442d-9e24-a060f8918a5a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""332e6ca0-9f05-4f19-89cc-679f4f1a0074"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ac1e8f4-c34e-4d8f-afee-ac548c2770e7"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9aab7fa1-fa2a-42e4-9ac8-12f0167d15fa"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d14cdb2c-21de-420c-a936-b60c256cccea"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""626b030e-13cb-45f8-a3bb-aea442347d87"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abe92dc8-fc14-4399-a5b4-b232bc8cecc9"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32209ec4-e369-4bc2-8e00-cb080ab56db6"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dccd38c-7921-460d-bd19-16d32ebfe384"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ed938bb-7463-4845-83c3-5671ef461e8d"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13460ff1-2da6-4a20-81e2-25c68105c7bc"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6e18f7e-1d95-4f29-b7fb-2c852170fa16"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44a89825-89f0-4275-a4fc-d2edba4c19ca"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b7b26b7-ed8a-4442-aee5-b5e454f88b32"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1875b816-0cef-4312-ad2d-cb2928bf6d88"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e77239a-498c-4dc1-a852-e472bdef3792"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""useItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c545c1eb-8c50-4d0f-b0ac-924d14862e48"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ed586a0-436a-4d49-aa40-afb54c522b2a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebb033be-a872-42e2-8470-e8d01faaacbd"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23bdc854-747d-4790-aa14-616a6d79325c"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""New action map"",
            ""id"": ""e7f78ca0-de82-4b7b-ba3c-492ff15c90a4"",
            ""actions"": [
                {
                    ""name"": ""Phone"",
                    ""type"": ""Button"",
                    ""id"": ""4313a390-a568-475b-a52a-f83551cb3587"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""36c2a734-2d24-4420-8abc-5ec480ce422d"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Phone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc694291-7e9f-433d-8199-093ce1f2ae60"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Phone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""New action map1"",
            ""id"": ""3c3eae06-e2b1-484e-bbc7-31d6b11c0704"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""f9ba831d-f048-40bf-8e88-00020ca5899f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d0502fbc-45bc-4efd-8423-eb84683f92f5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
        m_Player_ToggleUI = m_Player.FindAction("ToggleUI", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_Hotbar1 = m_Player.FindAction("Hotbar1", throwIfNotFound: true);
        m_Player_Hotbar2 = m_Player.FindAction("Hotbar2", throwIfNotFound: true);
        m_Player_Hotbar3 = m_Player.FindAction("Hotbar3", throwIfNotFound: true);
        m_Player_Hotbar4 = m_Player.FindAction("Hotbar4", throwIfNotFound: true);
        m_Player_Hotbar5 = m_Player.FindAction("Hotbar5", throwIfNotFound: true);
        m_Player_Hotbar6 = m_Player.FindAction("Hotbar6", throwIfNotFound: true);
        m_Player_Hotbar7 = m_Player.FindAction("Hotbar7", throwIfNotFound: true);
        m_Player_Hotbar8 = m_Player.FindAction("Hotbar8", throwIfNotFound: true);
        m_Player_Hotbar9 = m_Player.FindAction("Hotbar9", throwIfNotFound: true);
        m_Player_Hotbar10 = m_Player.FindAction("Hotbar10", throwIfNotFound: true);
        m_Player_useItem = m_Player.FindAction("useItem", throwIfNotFound: true);
        m_Player_MouseWheel = m_Player.FindAction("MouseWheel", throwIfNotFound: true);
        m_Player_Reload = m_Player.FindAction("Reload", throwIfNotFound: true);
        m_Player_Aim = m_Player.FindAction("Aim", throwIfNotFound: true);
        m_Player_SwitchFire = m_Player.FindAction("Switch Fire", throwIfNotFound: true);
        // New action map
        m_Newactionmap = asset.FindActionMap("New action map", throwIfNotFound: true);
        m_Newactionmap_Phone = m_Newactionmap.FindAction("Phone", throwIfNotFound: true);
        // New action map1
        m_Newactionmap1 = asset.FindActionMap("New action map1", throwIfNotFound: true);
        m_Newactionmap1_Newaction = m_Newactionmap1.FindAction("New action", throwIfNotFound: true);
    }

    ~@GameInput()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, GameInput.Player.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Newactionmap.enabled, "This will cause a leak and performance issues, GameInput.Newactionmap.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Newactionmap1.enabled, "This will cause a leak and performance issues, GameInput.Newactionmap1.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Sprint;
    private readonly InputAction m_Player_ToggleUI;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_Hotbar1;
    private readonly InputAction m_Player_Hotbar2;
    private readonly InputAction m_Player_Hotbar3;
    private readonly InputAction m_Player_Hotbar4;
    private readonly InputAction m_Player_Hotbar5;
    private readonly InputAction m_Player_Hotbar6;
    private readonly InputAction m_Player_Hotbar7;
    private readonly InputAction m_Player_Hotbar8;
    private readonly InputAction m_Player_Hotbar9;
    private readonly InputAction m_Player_Hotbar10;
    private readonly InputAction m_Player_useItem;
    private readonly InputAction m_Player_MouseWheel;
    private readonly InputAction m_Player_Reload;
    private readonly InputAction m_Player_Aim;
    private readonly InputAction m_Player_SwitchFire;
    public struct PlayerActions
    {
        private @GameInput m_Wrapper;
        public PlayerActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
        public InputAction @ToggleUI => m_Wrapper.m_Player_ToggleUI;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @Hotbar1 => m_Wrapper.m_Player_Hotbar1;
        public InputAction @Hotbar2 => m_Wrapper.m_Player_Hotbar2;
        public InputAction @Hotbar3 => m_Wrapper.m_Player_Hotbar3;
        public InputAction @Hotbar4 => m_Wrapper.m_Player_Hotbar4;
        public InputAction @Hotbar5 => m_Wrapper.m_Player_Hotbar5;
        public InputAction @Hotbar6 => m_Wrapper.m_Player_Hotbar6;
        public InputAction @Hotbar7 => m_Wrapper.m_Player_Hotbar7;
        public InputAction @Hotbar8 => m_Wrapper.m_Player_Hotbar8;
        public InputAction @Hotbar9 => m_Wrapper.m_Player_Hotbar9;
        public InputAction @Hotbar10 => m_Wrapper.m_Player_Hotbar10;
        public InputAction @useItem => m_Wrapper.m_Player_useItem;
        public InputAction @MouseWheel => m_Wrapper.m_Player_MouseWheel;
        public InputAction @Reload => m_Wrapper.m_Player_Reload;
        public InputAction @Aim => m_Wrapper.m_Player_Aim;
        public InputAction @SwitchFire => m_Wrapper.m_Player_SwitchFire;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @ToggleUI.started += instance.OnToggleUI;
            @ToggleUI.performed += instance.OnToggleUI;
            @ToggleUI.canceled += instance.OnToggleUI;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Hotbar1.started += instance.OnHotbar1;
            @Hotbar1.performed += instance.OnHotbar1;
            @Hotbar1.canceled += instance.OnHotbar1;
            @Hotbar2.started += instance.OnHotbar2;
            @Hotbar2.performed += instance.OnHotbar2;
            @Hotbar2.canceled += instance.OnHotbar2;
            @Hotbar3.started += instance.OnHotbar3;
            @Hotbar3.performed += instance.OnHotbar3;
            @Hotbar3.canceled += instance.OnHotbar3;
            @Hotbar4.started += instance.OnHotbar4;
            @Hotbar4.performed += instance.OnHotbar4;
            @Hotbar4.canceled += instance.OnHotbar4;
            @Hotbar5.started += instance.OnHotbar5;
            @Hotbar5.performed += instance.OnHotbar5;
            @Hotbar5.canceled += instance.OnHotbar5;
            @Hotbar6.started += instance.OnHotbar6;
            @Hotbar6.performed += instance.OnHotbar6;
            @Hotbar6.canceled += instance.OnHotbar6;
            @Hotbar7.started += instance.OnHotbar7;
            @Hotbar7.performed += instance.OnHotbar7;
            @Hotbar7.canceled += instance.OnHotbar7;
            @Hotbar8.started += instance.OnHotbar8;
            @Hotbar8.performed += instance.OnHotbar8;
            @Hotbar8.canceled += instance.OnHotbar8;
            @Hotbar9.started += instance.OnHotbar9;
            @Hotbar9.performed += instance.OnHotbar9;
            @Hotbar9.canceled += instance.OnHotbar9;
            @Hotbar10.started += instance.OnHotbar10;
            @Hotbar10.performed += instance.OnHotbar10;
            @Hotbar10.canceled += instance.OnHotbar10;
            @useItem.started += instance.OnUseItem;
            @useItem.performed += instance.OnUseItem;
            @useItem.canceled += instance.OnUseItem;
            @MouseWheel.started += instance.OnMouseWheel;
            @MouseWheel.performed += instance.OnMouseWheel;
            @MouseWheel.canceled += instance.OnMouseWheel;
            @Reload.started += instance.OnReload;
            @Reload.performed += instance.OnReload;
            @Reload.canceled += instance.OnReload;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @SwitchFire.started += instance.OnSwitchFire;
            @SwitchFire.performed += instance.OnSwitchFire;
            @SwitchFire.canceled += instance.OnSwitchFire;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @ToggleUI.started -= instance.OnToggleUI;
            @ToggleUI.performed -= instance.OnToggleUI;
            @ToggleUI.canceled -= instance.OnToggleUI;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Hotbar1.started -= instance.OnHotbar1;
            @Hotbar1.performed -= instance.OnHotbar1;
            @Hotbar1.canceled -= instance.OnHotbar1;
            @Hotbar2.started -= instance.OnHotbar2;
            @Hotbar2.performed -= instance.OnHotbar2;
            @Hotbar2.canceled -= instance.OnHotbar2;
            @Hotbar3.started -= instance.OnHotbar3;
            @Hotbar3.performed -= instance.OnHotbar3;
            @Hotbar3.canceled -= instance.OnHotbar3;
            @Hotbar4.started -= instance.OnHotbar4;
            @Hotbar4.performed -= instance.OnHotbar4;
            @Hotbar4.canceled -= instance.OnHotbar4;
            @Hotbar5.started -= instance.OnHotbar5;
            @Hotbar5.performed -= instance.OnHotbar5;
            @Hotbar5.canceled -= instance.OnHotbar5;
            @Hotbar6.started -= instance.OnHotbar6;
            @Hotbar6.performed -= instance.OnHotbar6;
            @Hotbar6.canceled -= instance.OnHotbar6;
            @Hotbar7.started -= instance.OnHotbar7;
            @Hotbar7.performed -= instance.OnHotbar7;
            @Hotbar7.canceled -= instance.OnHotbar7;
            @Hotbar8.started -= instance.OnHotbar8;
            @Hotbar8.performed -= instance.OnHotbar8;
            @Hotbar8.canceled -= instance.OnHotbar8;
            @Hotbar9.started -= instance.OnHotbar9;
            @Hotbar9.performed -= instance.OnHotbar9;
            @Hotbar9.canceled -= instance.OnHotbar9;
            @Hotbar10.started -= instance.OnHotbar10;
            @Hotbar10.performed -= instance.OnHotbar10;
            @Hotbar10.canceled -= instance.OnHotbar10;
            @useItem.started -= instance.OnUseItem;
            @useItem.performed -= instance.OnUseItem;
            @useItem.canceled -= instance.OnUseItem;
            @MouseWheel.started -= instance.OnMouseWheel;
            @MouseWheel.performed -= instance.OnMouseWheel;
            @MouseWheel.canceled -= instance.OnMouseWheel;
            @Reload.started -= instance.OnReload;
            @Reload.performed -= instance.OnReload;
            @Reload.canceled -= instance.OnReload;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @SwitchFire.started -= instance.OnSwitchFire;
            @SwitchFire.performed -= instance.OnSwitchFire;
            @SwitchFire.canceled -= instance.OnSwitchFire;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // New action map
    private readonly InputActionMap m_Newactionmap;
    private List<INewactionmapActions> m_NewactionmapActionsCallbackInterfaces = new List<INewactionmapActions>();
    private readonly InputAction m_Newactionmap_Phone;
    public struct NewactionmapActions
    {
        private @GameInput m_Wrapper;
        public NewactionmapActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Phone => m_Wrapper.m_Newactionmap_Phone;
        public InputActionMap Get() { return m_Wrapper.m_Newactionmap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NewactionmapActions set) { return set.Get(); }
        public void AddCallbacks(INewactionmapActions instance)
        {
            if (instance == null || m_Wrapper.m_NewactionmapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_NewactionmapActionsCallbackInterfaces.Add(instance);
            @Phone.started += instance.OnPhone;
            @Phone.performed += instance.OnPhone;
            @Phone.canceled += instance.OnPhone;
        }

        private void UnregisterCallbacks(INewactionmapActions instance)
        {
            @Phone.started -= instance.OnPhone;
            @Phone.performed -= instance.OnPhone;
            @Phone.canceled -= instance.OnPhone;
        }

        public void RemoveCallbacks(INewactionmapActions instance)
        {
            if (m_Wrapper.m_NewactionmapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(INewactionmapActions instance)
        {
            foreach (var item in m_Wrapper.m_NewactionmapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_NewactionmapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public NewactionmapActions @Newactionmap => new NewactionmapActions(this);

    // New action map1
    private readonly InputActionMap m_Newactionmap1;
    private List<INewactionmap1Actions> m_Newactionmap1ActionsCallbackInterfaces = new List<INewactionmap1Actions>();
    private readonly InputAction m_Newactionmap1_Newaction;
    public struct Newactionmap1Actions
    {
        private @GameInput m_Wrapper;
        public Newactionmap1Actions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Newactionmap1_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Newactionmap1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Newactionmap1Actions set) { return set.Get(); }
        public void AddCallbacks(INewactionmap1Actions instance)
        {
            if (instance == null || m_Wrapper.m_Newactionmap1ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Newactionmap1ActionsCallbackInterfaces.Add(instance);
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(INewactionmap1Actions instance)
        {
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(INewactionmap1Actions instance)
        {
            if (m_Wrapper.m_Newactionmap1ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(INewactionmap1Actions instance)
        {
            foreach (var item in m_Wrapper.m_Newactionmap1ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Newactionmap1ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Newactionmap1Actions @Newactionmap1 => new Newactionmap1Actions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnToggleUI(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnHotbar1(InputAction.CallbackContext context);
        void OnHotbar2(InputAction.CallbackContext context);
        void OnHotbar3(InputAction.CallbackContext context);
        void OnHotbar4(InputAction.CallbackContext context);
        void OnHotbar5(InputAction.CallbackContext context);
        void OnHotbar6(InputAction.CallbackContext context);
        void OnHotbar7(InputAction.CallbackContext context);
        void OnHotbar8(InputAction.CallbackContext context);
        void OnHotbar9(InputAction.CallbackContext context);
        void OnHotbar10(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
        void OnMouseWheel(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnSwitchFire(InputAction.CallbackContext context);
    }
    public interface INewactionmapActions
    {
        void OnPhone(InputAction.CallbackContext context);
    }
    public interface INewactionmap1Actions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
